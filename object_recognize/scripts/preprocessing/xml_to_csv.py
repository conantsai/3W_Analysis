import os
import glob
import pandas as pd
import argparse
import xml.etree.ElementTree as ET

def xml_to_csv(path):
    """[Iterates through all .xml files (generated by labelImg) in a given directory and combines them in a single Pandas datagrame.]

    Args:
        path ([type]): [The path containing the .xml files

    Returns:
        [Pandas DataFrame]: [The produced dataframe]
    """    

    xml_list = []
    for path_root, dirs, files in os.walk(path):
        for xml in files:
            tree = ET.parse(os.path.join(path_root, xml))  
            root = tree.getroot()
            for member in root.findall('object'):
                value = (os.path.join(path_root.split('for_object_label_info')[0], root.find('path').text.split("data2")[1].replace("\\", "/").split("/", 1)[1]),
                        int(root.find('size')[0].text),
                        int(root.find('size')[1].text),
                        member[0].text,
                        int(member[4][0].text),
                        int(member[4][1].text),
                        int(member[4][2].text),
                        int(member[4][3].text)
                        )
                xml_list.append(value)
        column_name = ['filename', 'width', 'height','class', 'xmin', 'ymin', 'xmax', 'ymax']
        xml_df = pd.DataFrame(xml_list, columns=column_name)
    return xml_df

def main():
    outputFile = "object_recognize/code/workspace/training_demo/annotations/train_labels.csv" ## output csv file path
    inputDir = "object_recognize/code/workspace/training_demo/images/train/for_object_label_info" ## input xml file path

    if(inputDir is None):
        inputDir = os.getcwd()
    if(outputFile is None):
        outputFile = inputDir + "/labels.csv"

    assert(os.path.isdir(inputDir))

    xml_df = xml_to_csv(inputDir)
    # xml_df.to_csv(outputFile, index=None)
    # print('Successfully converted xml to csv.')


if __name__ == '__main__':
    main()